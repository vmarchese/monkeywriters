/* Monkey Schema 
  The fields 
     followers
     followings
     likedstories
     stories
  can have a very large amount of values. 

  The  efficient solution is populating (and updating) those arrays with the latest
  number (i.e.20) of entries (also using separate documents) to immediately get the lates info
  without doing other queries. The queries on the associated tables will be done only in case
  of further browsing of those structures.
  e.g. The monkey asks for his followers page and the system already has the latest 20 in the 
       Monkey document (in array "followers"). If the users browses the following pages in the
       pagination, other queries are performed to get the next items.
*/
{
  "name":"Monkey",
  "surname":"Writer",
  "e-mail":"monkey.writer@monkeywriters.org",
  "bio":"Short bio of the Monkey",
  "nickname":"themonkey",
  "public":false,
  /** (latest 20) See above */
  "followers":[
    "dumbMonkey",
    "bonoboMonkey"
  ],
  /** (latest 20) See above */
  "following":[
    "chimpanzee",
    "gorilla",
    "monkeybusiness"
  ],
  /** (latest 20) See above */
  "likedstories":[
    1,2,3,4,5
  ],
  /** (latest 20) See above */
  "stories":[
    1,2,3,4,5
  ],
  /* Is it enough?*/
  "twitter_auth_token":"xxxxxx", 
  "facebook_auth_token":"xxxxx",
  "pinterest_auth_token":"xxxxx"
}

/* Monkey Followers */
{ "monkey_id":"themonkey", "monkey_following":"dumbMonkey" }
{ "monkey_id":"themonkey", "monkey_following":"bonoboMonkey" }

/* Monkey Followings */
{ "monkey_id":"themonkey", "monkey_followed":"chimpanzee" }
{ "monkey_id":"themonkey", "monkey_followed":"gorilla" }

/* Liked Stories */
{ "monkey_id":"themonkey", "story_id":1}
{ "monkey_id":"themonkey", "story_id":2}
{ "monkey_id":"themonkey", "story_id":3}
